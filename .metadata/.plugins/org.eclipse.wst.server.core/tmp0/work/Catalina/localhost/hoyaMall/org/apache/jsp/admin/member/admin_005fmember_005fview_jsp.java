/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2021-08-20 04:57:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.*;

public final class admin_005fmember_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("utf-8");
MemberInfo adminMemberArticle = (MemberInfo)request.getAttribute("adminMemberArticle");
if (adminMemberArticle == null) {
// 저장된 게시물이 없으면
	out.println("<script>");
	out.println("alert('잘못된 경로로 들어오셨습니다.');");
	out.println("history.back();");
	out.println("</script>");
}
int pageCnt = Integer.parseInt(request.getParameter("pageCnt"));
System.out.println(pageCnt + "뷰");

String uid = null;
AdminInfo adminLoginMember = (AdminInfo)session.getAttribute("adminLoginMember");
if (adminLoginMember != null)	uid = adminLoginMember.getAl_id();
// 현재 로그인한 상태이면 관리자 로그인 아이디를 uid에 저장

String id = request.getParameter("id");
int cpage = Integer.parseInt(request.getParameter("cpage"));
String schtype = request.getParameter("schtype");
String keyword = request.getParameter("keyword");
String args = "?cpage=" + cpage;
if (schtype != null && keyword != null && !keyword.equals("")) {
	args += "&schtype=" + schtype + "&keyword=" + keyword;
	// 검색어가 있으면 검색어를 쿼리스트링으로 가져감
}

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".viewContainer {\r\n");
      out.write("\twidth: 800px;\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write(".viewContainer h2 {\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write(".viewMove {\r\n");
      out.write("\twidth: 285px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\tmargin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"viewContainer\">\r\n");
      out.write("<h2>회원 상세보기 화면</h2>\r\n");
      out.write("<div class=\"viewMove\">\r\n");
      out.write("<table cellpadding=\"5\">\r\n");
      out.write("<tr><th>아이디</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlid() );
      out.write("</td></tr>\r\n");
      out.write("<tr><th>비밀번호</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlpwd() );
      out.write("</td></tr>\r\n");
      out.write("<tr><th>이름</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlname() );
      out.write("</td></tr>\r\n");
      out.write("<tr><th>성별</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlgender() );
      out.write("</td></tr>\r\n");
      out.write("<tr><th>생일</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlbirth() );
      out.write("</td></tr>\r\n");
      out.write("<tr><th>휴대폰</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlphone() );
      out.write("</td></tr>\r\n");
      out.write("<tr><th>이메일</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlemail());
      out.write("</td></tr>\r\n");
      out.write("<tr><th>보유 포인트</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlpoint());
      out.write("</td></tr>\r\n");
      out.write("<tr><th>가입일</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMldate());
      out.write("</td></tr>\r\n");
      out.write("<tr><th>최종로그인</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMllast());
      out.write("</td></tr>\r\n");
      out.write("<tr><th>상태</th>\r\n");
      out.write("<td colspan=\"3\">");
      out.print(adminMemberArticle.getMlstatus());
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td colspan=\"4\" align=\"center\">\r\n");
      out.write("\t<input type=\"button\" value=\"목록으로\" onclick=\"location.href='admin_member_list.amm");
      out.print(args );
      out.write("&pageCnt=");
      out.print(++pageCnt );
      out.write("';\" />\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"button\" value=\"수정\" onclick=\"location.href='admin_member_form.amm");
      out.print(args + "&wtype=up" + "&id=" + adminMemberArticle.getMlid() + "&pageCnt=" + pageCnt );
      out.write("'\" />\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"button\" value=\"삭제\" onclick=\"location.href='admin_member_proc.amm");
      out.print(args + "&wtype=del" + "&id=" + adminMemberArticle.getMlid() + "&pageCnt=" + pageCnt );
      out.write("'\" />\r\n");
      out.write("</td></tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
