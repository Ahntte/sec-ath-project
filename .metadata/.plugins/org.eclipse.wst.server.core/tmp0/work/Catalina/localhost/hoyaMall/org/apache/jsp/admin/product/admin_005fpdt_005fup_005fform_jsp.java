/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2021-08-26 04:54:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import vo.*;

public final class admin_005fpdt_005fup_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("utf-8");

ArrayList<CataBigInfo> cataBigList = (ArrayList<CataBigInfo>)request.getAttribute("cataBigList");
ArrayList<CataSmallInfo> cataSmallList = (ArrayList<CataSmallInfo>)request.getAttribute("cataSmallList");
PdtInfo pdtInfo = (PdtInfo)request.getAttribute("pdtInfo");

int cpage = Integer.parseInt(request.getParameter("cpage"));
int psize = Integer.parseInt(request.getParameter("psize"));

// 검색조건 및 정렬조건 쿼리스트링을 받음
String id, isview, schtype, keyword, sdate, edate, bcata, scata, sprice, eprice, stock, ord;
id		= request.getParameter("id");		isview	= request.getParameter("isview");
schtype = request.getParameter("schtype");	keyword = request.getParameter("keyword");
sdate	= request.getParameter("sdate");	edate	= request.getParameter("edate");
bcata	= request.getParameter("bcata");	scata	= request.getParameter("scata");
sprice	= request.getParameter("sprice");	eprice	= request.getParameter("eprice");
stock	= request.getParameter("stock");	ord 	= request.getParameter("ord");

String args = "?cpage=" + cpage + "&psize=" + psize;
if (isview != null && !isview.equals(""))	args += "&isview=" + isview;
if (sdate != null && !sdate.equals(""))		args += "&sdate=" + sdate;
if (edate != null && !edate.equals(""))		args += "&edate=" + edate;
if (bcata != null && !bcata.equals(""))		args += "&bcata=" + bcata;
if (scata != null && !scata.equals(""))		args += "&scata=" + scata;
if (sprice != null && !sprice.equals(""))	args += "&sprice=" + sprice;
if (eprice != null && !eprice.equals(""))	args += "&eprice=" + eprice;
if (stock != null && !stock.equals(""))		args += "&stock=" + stock;
if (keyword != null && !keyword.equals(""))
	args += "&schtype=" + schtype + "&keyword=" + keyword;
if (ord != null && !ord.equals(""))			args += "&ord=" + ord;

int csIdx = pdtInfo.getCs_idx();	// 소분류 idx
String cbIdx = (csIdx + "").substring(0, 2);	// 대분류 idx(소분류의 앞 두자리 숫자값)

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#pdtUpForm th, #pdtUpForm td { border-bottom:1px solid black; height:30px; }\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");

String scName = null;
int bc = 0, sc = 0;
for (int i = 0, j = 1 ; i < cataSmallList.size() ; i++, j++) {
	if (bc != cataSmallList.get(i).getCb_idx()) {
		j = 1;

      out.write("\r\n");
      out.write("var arr");
      out.print(cataSmallList.get(i).getCb_idx());
      out.write(" = new Array();\r\n");
      out.write("arr");
      out.print(cataSmallList.get(i).getCb_idx());
      out.write("[0] = new Option(\"\", \"소분류 선택\");\r\n");

	}
	bc = cataSmallList.get(i).getCb_idx();
	sc = cataSmallList.get(i).getCs_idx();
	scName = cataSmallList.get(i).getCs_name();

      out.write("\r\n");
      out.write("arr");
      out.print(bc);
      out.write('[');
      out.print(j);
      out.write("] = new Option(\"");
      out.print(sc);
      out.write("\", \"");
      out.print(scName);
      out.write("\");\r\n");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("function setCategory(obj, target) {\r\n");
      out.write("\tvar x = obj.value;\r\n");
      out.write("\tfor (var m = target.options.length - 1 ; m > 0 ; m--) {\r\n");
      out.write("\t\ttarget.options[m] = null;\r\n");
      out.write("\t}\r\n");
      out.write("\tif (x != \"\") {\r\n");
      out.write("\t\tvar selectedArray = eval(\"arr\" + x);\r\n");
      out.write("\t\tfor (var i = 0 ; i < selectedArray.length ; i++) {\r\n");
      out.write("\t\t\ttarget.options[i] = new Option(selectedArray[i].value, selectedArray[i].text);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttarget.options[0].selected = true;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>상품 등록 폼</h2>\r\n");
      out.write("<form name=\"frmPdt\" action=\"admin_product_up_proc.apdt\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("<input type=\"hidden\" name=\"args\" value=\"");
      out.print(args );
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" name=\"id\" value=\"");
      out.print(pdtInfo.getPl_id() );
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" name=\"oldImg1\" value=\"");
      out.print(pdtInfo.getPl_img1() );
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" name=\"oldImg2\" value=\"");
      out.print((pdtInfo.getPl_img2() == null) ? "" : pdtInfo.getPl_img2() );
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" name=\"oldImg3\" value=\"");
      out.print((pdtInfo.getPl_img3() == null) ? "" : pdtInfo.getPl_img3() );
      out.write("\" />\r\n");
      out.write("<input type=\"hidden\" name=\"oldDesc\" value=\"");
      out.print(pdtInfo.getPl_desc() );
      out.write("\" />\r\n");
      out.write("<table width=\"800\" cellpadding=\"5\" id=\"pdtUpForm\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th width=\"150\">대분류</th>\r\n");
      out.write("<td width=\"250\">\r\n");
      out.write("\t<select name=\"bCata\" onchange=\"setCategory(this, this.form.sCata);\">\r\n");
      out.write("\t\t<option value=\"\">대분류 선택</option>\r\n");
 for (int i = 0 ; i < cataBigList.size() ; i++) { 
      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(cataBigList.get(i).getCb_idx());
      out.write("\" \r\n");
      out.write("\t\t");
 if ((cataBigList.get(i).getCb_idx() + "").equals(cbIdx)) { 
      out.write("\r\n");
      out.write("\t\tselected=\"selected\"");
 } 
      out.write('>');
      out.print(cataBigList.get(i).getCb_name());
      out.write("</option>\r\n");
 } 
      out.write("\r\n");
      out.write("\t</select>\r\n");
      out.write("</td>\r\n");
      out.write("<th width=\"150\">소분류</th>\r\n");
      out.write("<td width=\"250\">\r\n");
      out.write("\t<select name=\"sCata\">\r\n");
      out.write("\t\t<option value=\"\">소분류 선택</option>\r\n");

for (int i = 0 ; i < cataSmallList.size() ; i++) {
	if (cbIdx.equals((cataSmallList.get(i).getCs_idx() + "").substring(0, 2))) {

      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(cataSmallList.get(i).getCs_idx());
      out.write("\" \r\n");
      out.write("\t\t");
 if (csIdx == cataSmallList.get(i).getCs_idx()) { 
      out.write("selected=\"selected\"");
 } 
      out.write(">\r\n");
      out.write("\t\t");
      out.print(cataSmallList.get(i).getCs_name());
      out.write("</option>\r\n");

	}
}

      out.write("\r\n");
      out.write("\t</select>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>원산지</th><td><input type=\"text\" name=\"orig\" value=\"");
      out.print(pdtInfo.getPl_orig() );
      out.write("\" /></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>상품명</th><td><input type=\"text\" name=\"name\" value=\"");
      out.print(pdtInfo.getPl_name() );
      out.write("\" /></td>\r\n");
      out.write("<th>가격</th><td><input type=\"text\" name=\"price\" value=\"");
      out.print(pdtInfo.getPl_price() );
      out.write("\" /></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>원가</th><td><input type=\"text\" name=\"cost\" value=\"");
      out.print(pdtInfo.getPl_cost() );
      out.write("\" /></td>\r\n");
      out.write("<th>할인율</th><td><input type=\"text\" name=\"discount\" value=\"");
      out.print(pdtInfo.getPl_discount() );
      out.write("\" /></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>이미지1</th><td><input type=\"file\" name=\"img1\" /><br />\r\n");
      out.print((pdtInfo.getPl_img1() == null) ? "이미지 없음" : pdtInfo.getPl_img1() );
      out.write("</td>\r\n");
      out.write("<th>이미지2</th><td><input type=\"file\" name=\"img2\" /><br />\r\n");
      out.print((pdtInfo.getPl_img2() == null) ? "이미지 없음" : pdtInfo.getPl_img2() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>이미지3</th><td><input type=\"file\" name=\"img3\" /><br />\r\n");
      out.print((pdtInfo.getPl_img3() == null) ? "이미지 없음" : pdtInfo.getPl_img3() );
      out.write("</td>\r\n");
      out.write("<th>설명이미지</th><td><input type=\"file\" name=\"desc\" /><br />\r\n");
      out.print((pdtInfo.getPl_desc() == null) ? "이미지 없음" : pdtInfo.getPl_desc() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>재고</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<select name=\"stock\">\r\n");
      out.write("\t\t<option value=\"-1\" ");
 if (pdtInfo.getPl_stock() == -1) { 
      out.write("selected=\"selected\"");
 } 
      out.write(">무제한</option>\r\n");
 for (int i = 0 ; i <= 100 ; i++) { 
      out.write("\r\n");
      out.write("\t\t<option value=\"");
      out.print(i);
      out.write('"');
      out.write(' ');
 if (pdtInfo.getPl_stock() == i) { 
      out.write("selected=\"selected\"");
 } 
      out.write('>');
      out.print(i);
      out.write("</option>\r\n");
 } 
      out.write("\r\n");
      out.write("\t</select> EA\r\n");
      out.write("</td>\r\n");
      out.write("<th>게시여부</th>\r\n");
      out.write("<td>\r\n");
      out.write("\t<input type=\"radio\" name=\"view\" value=\"y\" ");
 if (pdtInfo.getPl_view().equals("y")) { 
      out.write("checked=\"checked\"");
 } 
      out.write(" />상품 게시\r\n");
      out.write("\t<input type=\"radio\" name=\"view\" value=\"n\" ");
 if (pdtInfo.getPl_view().equals("n")) { 
      out.write("checked=\"checked\"");
 } 
      out.write(" />상품 미게시\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr><td colspan=\"4\" align=\"center\">\r\n");
      out.write("\t<input type=\"button\" value=\"목록으로\" onclick=\"location.href='admin_product_list.apdt");
      out.print(args );
      out.write("';\" />\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"submit\" value=\"상품 수정\" />\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<input type=\"reset\" value=\"다시 입력\" />\r\n");
      out.write("</td></tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
